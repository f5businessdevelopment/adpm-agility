name: scale-in-azure
on:
  repository_dispatch:
    types: 
      - scale-in-azure

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      can_scale: ${{ steps.can_scale.outputs.can_scale }}
      desired_capacity: ${{ steps.check_scale.outputs.desired_capacity }}
      student_nbr: ${{ steps.client_payload_data.outputs.student_nbr }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: output webhook payload
      run: echo "The source of the webhook is = ${{ github.event.client_payload }}"
    
    # - name: enable actions command processing
    #   run: echo "::`echo -n ${{ github.token }} | sha256sum | head -c 64`::"

    - name: parse client payload data for scaling
      id: client_payload_data
      run: |
        echo ::set-output name=student_nbr::${{ github.event.client_payload.studentNbr }}
    
    - name: output student number
      run: echo "This is the student number ${{ steps.client_payload_data.outputs.student_nbr }}"

    - name: install consul client
      run: sudo sh scripts/consul.sh

    - name: get consul server parameters
      id: consul_params
      run: echo ::set-output name=consul_server::$(cat configs/consul_server.cfg)

    - name: query bigip scaling min/max values
      id: bigip_scaling
      run: |
        echo ::set-output name=bigip_min::$(consul kv get -http-addr=${{ steps.consul_params.outputs.consul_server }} adpm/labs/agility/common/scaling/bigip/min)
        echo ::set-output name=bigip_max::$(consul kv get -http-addr=${{ steps.consul_params.outputs.consul_server }} adpm/labs/agility/common/scaling/bigip/max)

    - name: output min and max values
      run: |
        echo "This is BIG-IP minimum scaling value = ${{ steps.bigip_scaling.outputs.bigip_min }}"
        echo "This is BIG-IP maximum scaling value = ${{ steps.bigip_scaling.outputs.bigip_max }}"

    - name: query student data
      id: student_data
      run: echo ::set-output name=bigip_instance_count::$(consul kv get -http-addr=${{ steps.consul_params.outputs.consul_server }} adpm/labs/agility/students/${{ steps.client_payload_data.outputs.student_nbr }}/scaling/bigip/current_count)

    - name: output student data
      run: echo "The current BIG-IP instance count for student ${{ steps.client_payload_data.outputs.student_nbr }} is ${{ steps.student_data.outputs.bigip_instance_count }}"

    - name: check if can scale in
      id: check_scale
      run: echo ::set-output name=desired_capacity::$(expr ${{ steps.student_data.outputs.bigip_instance_count }} - 1)

    - name: output desired capacity
      run: echo "This is the new desired capacity = ${{ steps.check_scale.outputs.desired_capacity }}"

    - name: scale in
      id: can_scale
      if: steps.check_scale.outputs.desired_capacity > 0
      run: |
        echo "CAN scale in..."
        echo ::set-output name=can_scale::"true"
    
    - name: can't scale
      if: steps.check_scale.outputs.desired_capacity <= 0
      run: echo "CANNOT scale in becuase the desired capacity of ${{ steps.check_scale.outputs.desired_capacity }} is less than the minimum size of ${{ steps.bigip_scaling.outputs.bigip_min }}"
  
  scale:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: output environment variable
        run: |
          echo "This is the can_scale variable from build step = ${{ needs.build.outputs.can_scale }}"
          echo "This is the desired_capacity variable from build step = ${{ needs.build.outputs.desired_capacity }}"
          echo "this is the student number = ${{ needs.build.outputs.student_nbr }} "
      
      - name: initialize terraform environment
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~0.13.0

      - name: output terraform version 
        run: terraform version

      - name: process template file using jinja2
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./test.tpl
          output_file: ./rendered.txt
          variables:
            can_scale=${{ needs.build.outputs.can_scale }}
            desired_capacity=${{ needs.build.outputs.desired_capacity }}
            student_nbr=${{ needs.build.outputs.student_nbr }}

      - name: show rendered output
        run: cat ./rendered.txt

      - name: initialize terraform
        run: |
            cd /terraform/github_actions
            terraform init
            terraform plan
            terraform apply --auto-approve

